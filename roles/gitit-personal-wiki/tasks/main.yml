---

#
# check assumptions
#

- assert:
    that:
      - gitit_username is defined

- debug:
    msg: "Setting up personal wiki for {{ gitit_username }} user account."

#
# installation and firewall setup
#

- name: Install gitit packages
  dnf:
    name:
     - gitit
     - texlive-ulem
    state: present
  when: ansible_user == "root"

- name: Set firewall_type to unknown if not defined
  set_fact:
    firewall_type: 'unknown'
  when: ansible_user != "root" and firewall_type is undefined

# TODO: test and tweak this task
- name: Restrict local access to gitit port (iptables)
  lineinfile:
    dest: '/etc/sysconfig/{{ item }}'
    line: '-A OUTPUT {{ gitit_iptables_rule }}'
    insertbefore: '^COMMIT'
    state: present
  with_items:
   - iptables
  notify:
   - restart iptables
  when: firewall_type == "iptables" and ansible_user == "root"

- name: Restrict local access to gitit port (firewalld)
  when: firewall_type == "firewalld" and ansible_user == "root"
  block:

   - name: Get direct rules
     command: 'firewall-cmd --direct --get-rules ipv4 filter OUTPUT'
     changed_when: false
     register: firewalld_get_rules

   - name: Get list of direct rules from get-rules output
     set_fact:
       firewalld_rules: "{{ firewalld_get_rules.stdout|regex_replace('.!.', '!') }}"

   - name: Define direct rule to restrict local access to gitit port
     command: "{{ item }}"
     with_items:
      - 'firewall-cmd --direct --add-rule ipv4 filter OUTPUT 0 {{ gitit_iptables_rule }}'
      - 'firewall-cmd --permanent --direct --add-rule ipv4 filter OUTPUT 0 {{ gitit_iptables_rule }}'
     when: not (gitit_iptables_rule in firewalld_rules)

#
# user level setup
#

- name: User setup of gitit personal wiki
  become: True
  become_user: "{{ gitit_username }}"
  block:

    - name: Create gitit directory
      file:
        path: "{{ gitit_work_dir }}"
        state: directory

    - name: Initialize gitit.conf file
      shell: gitit --print-default-config > gitit.conf
      args:
        chdir:   "{{ gitit_work_dir }}"
        creates: "{{ gitit_work_dir }}/gitit.conf"

    - name: Configure gitit
      lineinfile:
        path: "{{ gitit_work_dir }}/gitit.conf"
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
      with_items:
        - regexp: '^#?address:'
          line: 'address: 127.0.0.1'
        - regexp: '^#?port:'
          line: 'port: {{ gitit_port }}'
        - regexp: '^#?wiki-title:'
          line: 'wiki-title: Personal Wiki'
        - regexp: '^#?repository-path:'
          line: 'repository-path: {{ gitit_repo_dir }}'
        - regexp: '^#?math:'
          line: 'math: MathML'
        - regexp: '^#?pdf-export:'
          line: 'pdf-export: yes'
      notify:
        - restart gitit

    - name: Create gitit service file
      template:
        src: roles/gitit-personal-wiki/files/gitit.service.j2
        dest: ~/.config/systemd/user/gitit.service

    - name: Enable gitit service
      service:
        name: gitit
        enabled: yes
        user: yes
      when: ansible_user != "root"
